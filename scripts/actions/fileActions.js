// ===================================================
// üîπ –†–æ–±–æ—Ç–∞ –∑ —Ñ–∞–π–ª–∞–º–∏: –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è, –∞–Ω–∞–ª—ñ–∑ Smart Object-—ñ–≤ (CommonJS)
// ===================================================

const { setStatus } = require("../ui/status.js");
const { collectSmartObjectsRecursive } = require("./smartParser.js");

const photoshop = require("photoshop");
const app = photoshop.app;
const core = photoshop.core;

/**
 * –°–ø—Ä–æ–±–∞ –∑–Ω–∞–π—Ç–∏ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π –¥–æ–∫—É–º–µ–Ω—Ç, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î fileEntry.
 * –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑–∞ –ø–æ–≤–Ω–∏–º —à–ª—è—Ö–æ–º (doc.path + doc.name) –∞–±–æ, —è–∫—â–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∑–∞ name.
 * ‚ö†Ô∏è –Ü–º–µ–Ω–∞ –º–æ–∂—É—Ç—å –∑–±—ñ–≥–∞—Ç–∏—Å—è ‚Äî —Ç–æ–º—É –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —à–ª—è—Ö (nativePath), —è–∫—â–æ —É –¥–æ–∫—É–º–µ–Ω—Ç—ñ –≤—ñ–Ω –¥–æ—Å—Ç—É–ø–Ω–∏–π.
 */
function findOpenDocForEntry(fileEntry) {
  const entryName = fileEntry.name;
  const entryPath = fileEntry.nativePath || null; // –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: "C:\...\project\art.psd"

  for (const doc of app.documents) {
    const docName = doc.name || doc.title || "";
    const docPath = (() => {
      // –£ —Ä—ñ–∑–Ω–∏—Ö –≤–µ—Ä—Å—ñ—è—Ö UXP –º–æ–∂–µ –±—É—Ç–∏ doc.path (—Ä—è–¥–æ–∫) –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
      try {
        return doc.path || null;
      } catch (_) {
        return null;
      }
    })();

    // 1) —è–∫—â–æ –∑–Ω–∞—î–º–æ –ø–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞ ‚Äî –∑–≤—ñ—Ä—è—î–º–æ –∑ —à–ª—è—Ö–æ–º entry
    if (entryPath && docPath) {
      // –Ω–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ —Å–ª–µ—à—ñ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
      const fullDocPath = `${docPath}`.replace(/\\/g, "/").replace(/\/+$/, "") + "/" + `${docName}`.replace(/\\/g, "/");
      const normalizedEntryPath = `${entryPath}`.replace(/\\/g, "/");
      if (fullDocPath.toLowerCase() === normalizedEntryPath.toLowerCase()) {
        return doc;
      }
    }

    // 2) fallback: –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ª–∏—à–µ –∑–∞ —ñ–º–µ–Ω–µ–º (–º–æ–∂–ª–∏–≤—ñ –∫–æ–ª—ñ–∑—ñ—ó, –∞–ª–µ –∫—Ä–∞—â–µ –Ω—ñ–∂ –Ω—ñ—á–æ–≥–æ)
    if (docName && entryName && docName.toLowerCase() === entryName.toLowerCase()) {
      return doc;
    }
  }

  return null;
}

// ===================================================
// üîπ –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª —É Photoshop (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –∫–ª—ñ–∫—É –∑ –¥–µ—Ä–µ–≤–∞)
// ===================================================
async function openFile(fileEntry) {
  try {
    setStatus(`–í—ñ–¥–∫—Ä–∏—Ç—Ç—è: ${fileEntry.name}`, "info", { persist: true });

    await core.executeAsModal(
      async () => {
        await app.open(fileEntry);
      },
      { commandName: "–í—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª" }
    );

    setStatus(` –í—ñ–¥–∫—Ä–∏—Ç–æ ${fileEntry.name}`, "success", { ttl: 1500 });
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Ñ–∞–π–ª—É:", err);
    setStatus("–ù–µ–º–æ–∂–ª–∏–≤–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª", "error", { persist: true });
  }
}

// ===================================================
// üîπ –ê–Ω–∞–ª—ñ–∑ Smart Object-—ñ–≤ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º 3-—Ö —Å—Ç–∞–Ω—ñ–≤
// ===================================================
async function analyzeSmartObjectsFromFile(fileEntry) {
  // –∑–∞–ø–∞–º‚Äô—è—Ç–æ–≤—É—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–æ –±—É–¥—å-—è–∫–∏—Ö –∑–º—ñ–Ω
  const previousDoc = app.activeDocument ?? null;

  // –Ω–∞–º–∞–≥–∞—î–º–æ—Å—å –∑–Ω–∞–π—Ç–∏ —á–∏ –≤–∂–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–∏–π PSD
  const alreadyOpenDoc = findOpenDocForEntry(fileEntry);

  // –ø—Ä–∞–ø–æ—Ä—Ü—ñ –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤—ñ–¥–∫–∞—Ç—É —Å—Ç–∞–Ω—É
  let openedTemporarily = false; // —Å—Ç–∞–Ω 1: –≤—ñ–¥–∫—Ä–∏–ª–∏ —Ç–∏–º—á–∞—Å–æ–≤–æ —ñ —Ç—Ä–µ–±–∞ –∑–∞–∫—Ä–∏—Ç–∏
  let switchedTemporarily = false; // —Å—Ç–∞–Ω 2: –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—è —Ç–∏–º—á–∞—Å–æ–≤–æ —ñ —Ç—Ä–µ–±–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å
  let targetDoc = null;

  try {
    await core.executeAsModal(
      async () => {
        if (!alreadyOpenDoc) {
          // --- –°–¢–ê–ù 1: —Ñ–∞–π–ª –Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π ---
          await app.open(fileEntry);
          openedTemporarily = true;
          targetDoc = app.activeDocument; // —â–æ–π–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —Å—Ç–∞—î –∞–∫—Ç–∏–≤–Ω–∏–º
        } else {
          targetDoc = alreadyOpenDoc;

          if (!previousDoc || previousDoc._id === targetDoc._id) {
            // --- –°–¢–ê–ù 3: –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π ---
            switchedTemporarily = false;
            // –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, –ø—Ä–æ—Å—Ç–æ –ø—ñ–¥–µ–º–æ –≤ –∞–Ω–∞–ª—ñ–∑
          } else {
            // --- –°–¢–ê–ù 2: –¥–æ–∫—É–º–µ–Ω—Ç –≤—ñ–¥–∫—Ä–∏—Ç–∏–π, –∞–ª–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–π ‚Äî –ø–µ—Ä–µ–º–∏–∫–∞—î–º–æ—Å—å ---
            app.activeDocument = targetDoc;
            switchedTemporarily = true;
          }
        }
      },
      { commandName: "–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –∞–Ω–∞–ª—ñ–∑—É" }
    );

    // ‚ö†Ô∏è —Å–∞–º –∞–Ω–∞–ª—ñ–∑ –≤–∏–∫–æ–Ω—É—î –π –º–æ–¥–∞–ª—å–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ smartParser (open/close embedded SO),
    // —Ç–æ–º—É —Ç—É—Ç –º–æ–∂–µ–º–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –π–æ–≥–æ –Ω–∞–ø—Ä—è–º—É
    const smartData = await collectSmartObjectsRecursive(targetDoc);

    return smartData;
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É Smart Object-—ñ–≤:", err);
    throw err;
  } finally {
    // –ê–∫—É—Ä–∞—Ç–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è —Å—Ç–∞–Ω—É (–≤—Å–µ, —â–æ –∑–º—ñ–Ω—é—î –¥–æ–∫—É–º–µ–Ω—Ç–∏ ‚Äî –∑–Ω–æ–≤—É –≤ modal)
    await core.executeAsModal(
      async () => {
        // —è–∫—â–æ –≤—ñ–¥–∫—Ä–∏–≤–∞–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —Ç–∏–º—á–∞—Å–æ–≤–æ ‚Äî –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –π–æ–≥–æ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
        if (openedTemporarily && targetDoc) {
          try {
            await targetDoc.closeWithoutSaving();
          } catch (closeErr) {
            console.warn("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–∫—Ä–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:", closeErr);
          }
        }

        // —è–∫—â–æ —Ç–∏–º—á–∞—Å–æ–≤–æ –ø–µ—Ä–µ–º–∏–∫–∞–ª–∏—Å—è ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
        if (switchedTemporarily && previousDoc) {
          try {
            app.activeDocument = previousDoc;
          } catch (switchErr) {
            console.warn("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç:", switchErr);
          }
        }
      },
      { commandName: "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –ø—ñ—Å–ª—è –∞–Ω–∞–ª—ñ–∑—É" }
    );
  }
}

module.exports = { openFile, analyzeSmartObjectsFromFile };
