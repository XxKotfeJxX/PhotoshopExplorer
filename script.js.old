// ===================================================
// üîπ Photoshop Project Explorer ‚Äî –∑ —ñ–∫–æ–Ω–∫–∞–º–∏, —Å—Ç–∞—Ç—É—Å–∞–º–∏ —ñ Smart Objects
// ===================================================

// –Ü–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º–Ω–∏—Ö API
const uxp = require("uxp");
const localFileSystem = uxp.storage.localFileSystem;
const entrypoints = uxp.entrypoints;

// –ï–ª–µ–º–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
const openFolderBtn = document.getElementById("openFolderBtn");
const refreshBtn = document.getElementById("refreshBtn");
const fileTree = document.getElementById("fileTree");
const currentPath = document.getElementById("currentPath");
const statusBar = document.getElementById("statusBar");

let currentFolder = null;

// üî∏ –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è Photoshop
const SUPPORTED_EXTENSIONS = [
  "psd", "psb", "png", "jpg", "jpeg", "tif", "tiff",
  "gif", "bmp", "tga", "svg", "pdf", "heic", "webp"
];

// ===================================================
// üîπ –Ü–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø—ñ–≤ —Ñ–∞–π–ª—ñ–≤ (–ª–æ–∫–∞–ª—å–Ω—ñ –∑ fallback)
// ===================================================

/**
 *  /icons :
 * –Ø–∫—â–æ —è–∫–∏—Ö–æ—Å—å –Ω–µ–º–∞—î ‚Äî –ø—ñ–¥—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –µ–º–æ–¥–∑—ñ.
 */
const ICONS = {
  folder: "icons/folder.png",
  folderOpen: "icons/folder-open.png",
  psd: "icons/file-psd.png",
  psb: "icons/file-psb.png",
  image: "icons/file-image.png",
  pdf: "icons/file-pdf.png",
  generic: "icons/file-generic.png",
  smart: "icons/smart.png",
};

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —à–ª—è—Ö—É (UXP –Ω–µ –¥–∞—î sync –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É –≤ –ø–∞–∫–µ—Ç—ñ –ª–µ–≥–∫–æ,
// —Ç–æ–º—É —Ä–æ–±–∏–º–æ –ø—Ä–æ—Å—Ç–∏–π fallback —É —Ä–∞–Ω—Ç–∞–π–º—ñ: —è–∫—â–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å ‚Äî –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ –µ–º–æ–¥–∑—ñ)
function createIconImg(src, fallbackEmoji) {
  const img = document.createElement("img");
  img.src = src;
  img.alt = "";
  img.width = 16;
  img.height = 16;
  img.style.display = "inline-block";
  img.style.width = "16px";
  img.style.height = "16px";
  img.style.objectFit = "contain";
  img.onerror = () => {
    // –Ø–∫—â–æ –Ω–µ–º–∞ —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª—É ‚Äî –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ –µ–º–æ–¥–∑—ñ
    img.replaceWith(document.createTextNode(fallbackEmoji));
  };
  return img;
}

function getFileIconForEntry(entry) {
  if (entry.isFolder) {
    return createIconImg(ICONS.folder, "üìÅ");
  }
  const ext = (entry.name.split(".").pop() || "").toLowerCase();
  if (ext === "psd") return createIconImg(ICONS.psd, "üÖøÔ∏è");
  if (ext === "psb") return createIconImg(ICONS.psb, "üÖøÔ∏è");
  if (["png","jpg","jpeg","gif","bmp","tif","tiff","tga","svg","heic","webp"].includes(ext)) {
    return createIconImg(ICONS.image, "üñºÔ∏è");
  }
  if (ext === "pdf") return createIconImg(ICONS.pdf, "üìÑ");
  return createIconImg(ICONS.generic, "üìÑ");
}

// ===================================================
// üîπ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç—É—Å-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ –∞–≤—Ç–æ–ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è–º
// ===================================================
let statusTimer = null;
/**
 * setStatus("–¢–µ–∫—Å—Ç", "info"|"success"|"warn"|"error", { persist?: boolean, ttl?: number })
 */
function setStatus(message, type = "info", options = {}) {
  const { persist = false, ttl = 2000 } = options;
  // —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è –ª–µ–≥–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å-–µ–º–æ–¥–∑—ñ
  const prefix = {
    info: "‚ÑπÔ∏è",
    success: "‚úÖ",
    warn: "‚ö†Ô∏è",
    error: "‚ùå",
  }[type] || "‚ÑπÔ∏è";

  statusBar.textContent = `${prefix} ${message}`;

  if (statusTimer) {
    clearTimeout(statusTimer);
    statusTimer = null;
  }
  if (!persist) {
    statusTimer = setTimeout(() => {
      // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–µ–∫—Å—Ç; –º–æ–∂–Ω–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ "–ì–æ—Ç–æ–≤–æ" —è–∫ –¥–µ—Ñ–æ–ª—Ç
      statusBar.textContent = "–ì–æ—Ç–æ–≤–æ";
      statusTimer = null;
    }, ttl);
  }
}

// ===================================================
// üîπ –í–∏–±—ñ—Ä —Ç–µ–∫–∏
// ===================================================
openFolderBtn.addEventListener("click", async () => {
  try {
    currentFolder = await localFileSystem.getFolder({ allowSystem: true });
    if (!currentFolder) {
      setStatus("–¢–µ–∫—É –Ω–µ –≤–∏–±—Ä–∞–Ω–æ", "warn");
      return;
    }

    currentPath.textContent = currentFolder.nativePath || "(–Ω–µ–≤—ñ–¥–æ–º–æ)";
    await renderTree(currentFolder, fileTree);
    setStatus("–°–ø–∏—Å–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ", "success");
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —Ç–µ–∫–∏:", err);
    setStatus("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ —Ç–µ–∫–∏", "error", { persist: true });
  }
});

// ===================================================
// üîπ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞
// ===================================================
refreshBtn.addEventListener("click", () => {
  if (currentFolder) renderTree(currentFolder, fileTree);
});

// ===================================================
// üîπ –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –ø–æ–±—É–¥—É–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤–∞
// ===================================================
async function renderTree(folder, container) {
  container.innerHTML = "";
  setStatus("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...");

  try {
    const entries = await folder.getEntries();
    if (!entries.length) {
      setStatus("–ü–æ—Ä–æ–∂–Ω—è —Ç–µ–∫–∞", "info", { ttl: 1200 });
      return;
    }

    for (const entry of entries) {
      const item = document.createElement("div");
      item.className = "tree-item";

      const iconNode = getFileIconForEntry(entry);
      const name = document.createElement("span");
      name.textContent = entry.name;

      item.append(iconNode, name);
      container.appendChild(item);

      // ===================================================
      // üîπ –Ø–∫—â–æ —Ü–µ —Ç–µ–∫–∞
      // ===================================================
      if (entry.isFolder) {
        const childrenContainer = document.createElement("div");
        childrenContainer.className = "tree-children";
        childrenContainer.style.display = "none";
        container.appendChild(childrenContainer);

        let expanded = false;
        item.addEventListener("click", async (e) => {
          e.stopPropagation();
          expanded = !expanded;
          if (expanded) {
            // –∑–º—ñ–Ω—é—î–º–æ —ñ–∫–æ–Ω–∫—É –ø–∞–ø–∫–∏ (—Å–ø—Ä–æ–±—É—î–º–æ –∑–∞–º—ñ–Ω–∏—Ç–∏, —è–∫—â–æ —Ü–µ <img> –∞–±–æ –µ–º–æ–¥–∑—ñ)
            if (iconNode.tagName === "IMG") iconNode.src = ICONS.folderOpen;
            else iconNode.textContent = "üìÇ";

            if (!childrenContainer.dataset.loaded) {
              await renderTree(entry, childrenContainer);
              childrenContainer.dataset.loaded = "1";
            }
            childrenContainer.style.display = "block";
          } else {
            if (iconNode.tagName === "IMG") iconNode.src = ICONS.folder;
            else iconNode.textContent = "üìÅ";
            childrenContainer.style.display = "none";
          }
        });
      }

      // ===================================================
      // üîπ –Ø–∫—â–æ —Ü–µ —Ñ–∞–π–ª
      // ===================================================
      else {
        const ext = entry.name.split(".").pop().toLowerCase();

        // üî∏ –û–¥–∏–Ω–∞—Ä–Ω–∏–π –∫–ª—ñ–∫ ‚Üí –ø–æ–∫–∞–∑–∞—Ç–∏ Smart Object-–∏ (PSD/PSB)
        item.addEventListener("click", async (e) => {
          e.stopPropagation();

          if (["psd", "psb"].includes(ext)) {
            // –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É –∞–Ω–∞–ª—ñ–∑—É
            if (item.dataset.loading === "1") return;

            // –∑–Ω–∞–π–¥–µ–º–æ/—Å—Ç–≤–æ—Ä–∏–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—ñ–¥ –¥–µ—Ä–µ–≤—Ü–µ —Å–º–∞—Ä—Ç—ñ–≤
            let childrenContainer =
              item.nextSibling && item.nextSibling.classList.contains("tree-children")
                ? item.nextSibling
                : null;

            if (!childrenContainer) {
              childrenContainer = document.createElement("div");
              childrenContainer.className = "tree-children";
              container.insertBefore(childrenContainer, item.nextSibling);
            }

            // toggle –ª–æ–≥—ñ–∫–∞
            const isHidden = childrenContainer.style.display === "none" || !childrenContainer.style.display;
            childrenContainer.style.display = isHidden ? "block" : "none";
            if (!isHidden) return; // –≤–∂–µ –±—É–ª–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —ñ –∑–∞—Ä–∞–∑ –ø—Ä–æ—Å—Ç–æ —Ö–æ–≤–∞—î–º–æ/–ø–æ–∫–∞–∑—É—î–º–æ

            // –Ø–∫—â–æ —â–µ –Ω–µ –∑—á–∏—Ç—É–≤–∞–ª–∏ ‚Äî –∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω–∞–ª—ñ–∑
            if (!childrenContainer.dataset.loaded) {
              item.dataset.loading = "1";
              setStatus(`–ê–Ω–∞–ª—ñ–∑ ${entry.name}...`, "info", { persist: true });

              try {
                const smartTree = await analyzeSmartObjectsFromFile(entry);
                childrenContainer.innerHTML = ""; // –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ —Ç–∞–º —â–æ—Å—å –±—É–ª–æ
                renderSmartTree(smartTree, childrenContainer);

                childrenContainer.dataset.loaded = "1";
                setStatus(`–ó—á–∏—Ç–∞–Ω–æ —Å–º–∞—Ä—Ç-–æ–±'—î–∫—Ç–∏: ${smartTree.length}`, "success", { ttl: 1600 });
              } catch (err) {
                console.error("–ê–Ω–∞–ª—ñ–∑ –ø–æ–º–∏–ª–∫–æ–≤–∏–π:", err);
                setStatus("–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É —Ñ–∞–π–ª—É", "error", { persist: true });
              } finally {
                item.dataset.loading = "";
              }
            }
          }
        });

        // üî∏ –ü–æ–¥–≤—ñ–π–Ω–∏–π –∫–ª—ñ–∫ ‚Üí –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª
        item.addEventListener("dblclick", async (e) => {
          e.stopPropagation();
          await openFile(entry);
        });
      }
    }

    setStatus(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${entries.length} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤`, "success", { ttl: 1200 });
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–±—É–¥–æ–≤—ñ –¥–µ—Ä–µ–≤–∞:", err);
    setStatus("–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ç–µ–∫—É", "error", { persist: true });
  }
}

// ===================================================
// üîπ –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –ø–æ–±—É–¥—É–≤–∞–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ Smart Object-—ñ–≤
// ===================================================
function renderSmartTree(nodes, container) {
  if (!nodes || !nodes.length) {
    const empty = document.createElement("div");
    empty.className = "tree-item";
    empty.style.opacity = "0.7";
    empty.append(document.createTextNode("‚Äî –°–º–∞—Ä—Ç-–æ–±‚Äô—î–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî"));
    container.appendChild(empty);
    return;
  }

  for (const node of nodes) {
    const item = document.createElement("div");
    item.className = "tree-item";

    // —ñ–∫–æ–Ω–∫–∞ —Å–º–∞—Ä—Ç—É
    const smartIcon = createIconImg(ICONS.smart, "üß©");
    const name = document.createElement("span");
    name.textContent = node.name;

    item.append(smartIcon, name);
    container.appendChild(item);

    if (node.children && node.children.length) {
      const childrenContainer = document.createElement("div");
      childrenContainer.className = "tree-children";
      childrenContainer.style.display = "none";
      container.appendChild(childrenContainer);

      let expanded = false;
      item.addEventListener("click", (e) => {
        e.stopPropagation();
        expanded = !expanded;
        childrenContainer.style.display = expanded ? "block" : "none";
      });

      renderSmartTree(node.children, childrenContainer);
    }
  }
}

// ===================================================
// üîπ –ê–Ω–∞–ª—ñ–∑ Smart Object-—ñ–≤ –∑ PSD/PSB (—Ñ–æ–Ω–æ–≤–∞ –ª–æ–≥—ñ–∫–∞)
//    –ü–æ–∫—Ä–∏–≤–∞—î 3 —Å—Ü–µ–Ω–∞—Ä—ñ—ó: –∑–∞–∫—Ä–∏—Ç–∏–π, –≤—ñ–¥–∫—Ä–∏—Ç–∏–π-–Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π, –∞–∫—Ç–∏–≤–Ω–∏–π
// ===================================================
async function analyzeSmartObjectsFromFile(fileEntry) {
  const { app, core } = require("photoshop");

  return await core.executeAsModal(async () => {
    const previousDoc = app.activeDocument ?? null;
    const docsBefore = app.documents.length;

    // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ (Photoshop —Å–∞–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ —Ü–µ–π –¥–æ–∫—É–º–µ–Ω—Ç)
    await app.open(fileEntry);
    const targetDoc = app.activeDocument;

    // üß† –ó–±–∏—Ä–∞—î–º–æ Smart Object-–∏ (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ)
    const smartData = await collectSmartObjectsRecursive(targetDoc);

    // –Ø–∫—â–æ –¥–æ–∫—É–º–µ–Ω—Ç –±—É–≤ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –Ω–∞–º–∏ ‚Äî –∑–∞–∫—Ä–∏–≤–∞—î–º–æ
    if (app.documents.length > docsBefore) {
      await targetDoc.closeWithoutSaving();
    }

    // –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞–∑–∞–¥, —è–∫—â–æ –º–∏ –∑–º—ñ–Ω–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
    if (previousDoc && previousDoc !== targetDoc) {
      app.activeDocument = previousDoc;
    }

    return smartData;
  }, { commandName: "Analyze Smart Objects" });
}

// ===================================================
// üîπ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π –∑–±—ñ—Ä Smart Object-—ñ–≤
// ===================================================
async function collectSmartObjectsRecursive(doc, depth = 0, maxDepth = 4) {
  const { app, core } = require("photoshop");
  const result = [];
  if (depth > maxDepth) return result;

  // –í–∞–∂–ª–∏–≤–æ: —É Photoshop –∫–æ–ª–µ–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ –º–∞—Å–∏–≤–æ–ø–æ–¥—ñ–±–Ω–∏–º–∏; –ø—Ä–∏–≤–µ–¥–µ–º–æ –¥–æ plain –º–∞—Å–∏–≤—É
  const layers = Array.from(doc.layers || []);

  for (const layer of layers) {
    if (layer.kind === "smartObject") {
      const info = { name: layer.name, type: "smart", children: [] };

      // –Ø–∫—â–æ linked ‚Üí –¥–æ–¥–∞—î–º–æ —à–ª—è—Ö, –±–µ–∑ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
      if (layer.smartObject && layer.smartObject.link && layer.smartObject.link.path) {
        info.path = layer.smartObject.link.path;
      } else {
        // embedded ‚Üí –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ, –∞–Ω–∞–ª—ñ–∑—É—î–º–æ, –∑–∞–∫—Ä–∏–≤–∞—î–º–æ
        await core.executeAsModal(async () => {
          await layer.smartObject.open();
        }, { commandName: "Open Smart Object" });

        const innerDoc = app.activeDocument;
        info.children = await collectSmartObjectsRecursive(innerDoc, depth + 1, maxDepth);

        await core.executeAsModal(async () => {
          await innerDoc.closeWithoutSaving();
        });
      }

      result.push(info);
    }
  }
  return result;
}

// ===================================================
// üîπ –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª —É Photoshop (—á–µ—Ä–µ–∑ executeAsModal)
// ===================================================
async function openFile(fileEntry) {
  const { app, core } = require("photoshop");
  try {
    const ext = (fileEntry.name.split(".").pop() || "").toLowerCase();

    if (!SUPPORTED_EXTENSIONS.includes(ext)) {
      setStatus(`${fileEntry.name} ‚Äî —Ñ–æ—Ä–º–∞—Ç –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è`, "warn");
      return;
    }

    setStatus(`–í—ñ–¥–∫—Ä–∏—Ç—Ç—è: ${fileEntry.name}`, "info", { persist: true });

    await core.executeAsModal(async () => {
      await app.open(fileEntry);
    }, { commandName: "–í—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Explorer" });

    setStatus(`–í—ñ–¥–∫—Ä–∏—Ç–æ ${fileEntry.name}`, "success", { ttl: 1400 });
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Ñ–∞–π–ª—É:", err);
    setStatus("–ù–µ–º–æ–∂–ª–∏–≤–æ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ–∞–π–ª", "error", { persist: true });
  }
}

// ===================================================
// üîπ entrypoints
// ===================================================
entrypoints.setup({
  panels: {
    mainPanel: {
      show(event) {
        const panel = event.node;
        try {
          if (panel && !panel.icon) {
            panel.icon = "icons/icon.png";
          }
        } catch (err) {
          console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —ñ–∫–æ–Ω–∫—É:", err);
        }
      },
    },
  },
});

console.log("‚úÖ Project Explorer –∑ —ñ–∫–æ–Ω–∫–∞–º–∏ —Ç–∞ Smart Object-–∞–º–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ");
